<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SensorizMonitoring</name>
    </assembly>
    <members>
        <member name="M:SensorizMonitoring.Controllers.BranchController.InsertBranch(SensorizMonitoring.Models.BranchModel)">
            <summary>
            Insere a Filial
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.BranchController.UpdateBranch(System.Int32,SensorizMonitoring.Models.BranchModel)">
            <summary>
            Atualiza a Filial
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.BranchController.DeleteBranch(System.Int32)">
            <summary>
            Remove Filial
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.BranchController.EnableDisableBranch(System.Int32,System.Int32)">
            <summary>
            Ativa/Desativa Filial. Basta passar o id e a flag, sendo 1 para ativar e 0 para desativar.
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.BranchController.GetBranches(System.Int32,System.Int32)">
            <summary>
            Lista todas as filiais de forma paginada
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.BranchController.GetBranchById(System.Int32)">
            <summary>
            Lista a Filial por ID
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.CompanyController.InsertCompany(SensorizMonitoring.Models.CompanyModel)">
            <summary>
            Insere a Companhia
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.CompanyController.UpdateCompany(System.Int32,SensorizMonitoring.Models.CompanyModel)">
            <summary>
            Atualiza a Companhia
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.CompanyController.DeleteCompany(System.Int32)">
            <summary>
            Remove Companhia
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.CompanyController.EnableDisableCompany(System.Int32,System.Int32)">
            <summary>
            Ativa/Desativa Companhia. Basta passar o id e a flag, sendo 1 para ativar e 0 para desativar.
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.CompanyController.GetCompanies(System.Int32,System.Int32)">
            <summary>
            Lista todas as companhias de forma paginada
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.CompanyController.GetCompanyById(System.Int32)">
            <summary>
            Lista a Companhia por ID
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceController.InsertDevice(SensorizMonitoring.Models.DeviceModel)">
            <summary>
            Insere o dispositivo apenas na base da Sensoriz
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceController.UpdateDevice(System.Int32,SensorizMonitoring.Models.DeviceModel)">
            <summary>
            Atualiza o dispositivo apenas na base da Sensoriz
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceController.EnableDisableDevice(System.Int32,System.Int32)">
            <summary>
            Ativa e desativa o dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceController.RemoveDevice(System.Int32)">
            <summary>
            Remove o dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceController.GetDeviceByBranchId(System.Int32)">
            <summary>
            Lista Todos os Dispositivos por CompanyID
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceController.GetDeviceInformationByDeviceId(System.String)">
            <summary>
            Pega as informações do Dispositivo na API da LocoAware pelo Device Code.
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceReferenceController.SincronizeDeviceReferences">
            <summary>
            Sincroniza Todos os Modelos de Dispositivos, sincronizãndo diretamente com a API da LocoAware
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.DeviceReferenceController.GetAllDeviceReference">
            <summary>
            Lista todos os modelos de dispositivos na base de dados da Sensoriz
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.MonitoringController.InsertMonitoring(System.Object)">
            <summary>
            Recebe as notificações dos dispositivos da LocoAware
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationLogsController.GetAllNotificationsLogs(System.Int32,System.Int64,System.Int32,System.Int32)">
            <summary>
            Lista todos o Log de Notificações de forma paginada
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationOwnerController.InsertNotificationOwner(SensorizMonitoring.Models.NotificationOwner.NotificationOwnerModel)">
            <summary>
            Insere Owner da Notificação de Monitoramento
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationOwnerController.UpdateNotificationOwner(System.Int32,SensorizMonitoring.Data.Models.NotificationOwner)">
            <summary>
            Atualiza o Owner da Notificação de Monitoramento
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationOwnerController.EnableDisableNotificationOwner(System.Int32,System.Int32)">
            <summary>
            Ativa e desativa o Owner da Notificação de Monitoramento
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationOwnerController.RemoveNotificationOwner(System.Int32)">
            <summary>
            Remove o Owner da Notificação de Monitoramento
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationOwnerController.GetNotificationOwnerByDeviceID(System.Int64)">
            <summary>
            Lista os Owners da Notificação de Monitoramento por código de dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.InsertNotificationSettings(SensorizMonitoring.Models.NotificationsSettings.NotificationSettingsModel)">
            <summary>
            Cria a configuração de uma notificação de um determinado dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.UpdateNotificationSettings(System.Int32,SensorizMonitoring.Data.Models.NotificationSettings)">
            <summary>
            Atualiza a configuração de uma notificação de um determinado dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.DeleteNotificationSettings(System.Int32)">
            <summary>
            Remove a configuração de uma notificação de um determinado dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.EnableNotificationSettings(System.Int32,System.Int32)">
            <summary>
            Ativa/Desativa a configuração de uma notificação de um determinado dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.GetAllNotificationsSettings(System.Int32,System.Int32,System.Int32)">
            <summary>
            Lista todas as configurações de forma paginada
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.GetNotificationSettingsById(System.Int32)">
            <summary>
            Lista a configuração de uma notificação de um determinado dispositivo por ID da Configuração
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.NotificationSettingsController.GetNotificationSettingsByDeviceId(System.Int64)">
            <summary>
            Lista a configuração de uma notificação de um determinado dispositivo por ID do Dispositivo
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.SensorTypeController.GetAllSensorType">
            <summary>
            Lista Todos os Tipos de Sensores dos Dispositivos
            </summary>
            <returns></returns>
        </member>
        <member name="M:SensorizMonitoring.Controllers.UserController.InsertUser(SensorizMonitoring.Models.UserModel)">
            <summary>
            Insere o Usuario
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.UserController.UpdateUser(System.Int32,SensorizMonitoring.Models.UserModel)">
            <summary>
            Atualiza o usuário
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.UserController.EnableDisableUser(System.Int32,System.Int32)">
            <summary>
            Ativa/Desativa Usuário. Basta passar o id e a flag, sendo 1 para ativar e 0 para desativar.
            </summary>
        </member>
        <member name="M:SensorizMonitoring.Controllers.UserController.GetAllUsersByBranch(System.Int32,System.Int32,System.Int32)">
            <summary>
            Lista todas as configurações de forma paginada
            </summary>
        </member>
    </members>
</doc>
